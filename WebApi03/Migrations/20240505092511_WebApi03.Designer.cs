// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi03.Data;

#nullable disable

namespace WebApi03.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240505092511_WebApi03")]
    partial class WebApi03
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApi03.Models.Authors", b =>
                {
                    b.Property<int>("AuthorsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorsID"));

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorsID");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorsID = 1,
                            FullName = "Phan Hồ Anh Kha"
                        },
                        new
                        {
                            AuthorsID = 2,
                            FullName = "Cao Mai Hương"
                        });
                });

            modelBuilder.Entity("WebApi03.Models.BookAuthor", b =>
                {
                    b.Property<int?>("BooksID")
                        .HasColumnType("int");

                    b.Property<int?>("AuthorsID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("BooksID", "AuthorsID");

                    b.HasIndex("AuthorsID");

                    b.ToTable("BookAuthor");
                });

            modelBuilder.Entity("WebApi03.Models.Books", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookID"));

                    b.Property<string>("CoverUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRead")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("PublisherID")
                        .HasColumnType("int");

                    b.Property<int?>("PublishersID")
                        .HasColumnType("int");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookID");

                    b.HasIndex("PublishersID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookID = 1,
                            CoverUrl = "https://images.example.com/Book.jpg",
                            DateAdded = new DateTime(2024, 5, 5, 16, 25, 10, 725, DateTimeKind.Local).AddTicks(8137),
                            DateRead = new DateTime(2024, 5, 5, 16, 25, 10, 725, DateTimeKind.Local).AddTicks(8124),
                            Description = "Hành trình đi tìm ngọc rồng của cậu bé Songoku.",
                            IsRead = true,
                            PublisherID = 1,
                            Rate = 10,
                            Title = "Bảy Viên Ngọc Rồng"
                        },
                        new
                        {
                            BookID = 2,
                            CoverUrl = "https://images.example.com/BookNaruto.jpg",
                            DateAdded = new DateTime(2024, 5, 5, 16, 25, 10, 725, DateTimeKind.Local).AddTicks(8143),
                            DateRead = new DateTime(2024, 5, 5, 16, 25, 10, 725, DateTimeKind.Local).AddTicks(8142),
                            Description = "Hành trình phưu lưu của cậu bé mồ côi.",
                            IsRead = true,
                            PublisherID = 2,
                            Rate = 5,
                            Title = "Naruto"
                        });
                });

            modelBuilder.Entity("WebApi03.Models.Publishers", b =>
                {
                    b.Property<int>("PublishersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublishersID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublishersID");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            PublishersID = 1,
                            Name = "Khổng Tử"
                        },
                        new
                        {
                            PublishersID = 2,
                            Name = "Hồ Chí Minh"
                        });
                });

            modelBuilder.Entity("WebApi03.Models.BookAuthor", b =>
                {
                    b.HasOne("WebApi03.Models.Authors", "Author")
                        .WithMany("Book_Authors")
                        .HasForeignKey("AuthorsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi03.Models.Books", "Books")
                        .WithMany("Book_Authors")
                        .HasForeignKey("BooksID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Books");
                });

            modelBuilder.Entity("WebApi03.Models.Books", b =>
                {
                    b.HasOne("WebApi03.Models.Publishers", "Publishers")
                        .WithMany("Books")
                        .HasForeignKey("PublishersID");

                    b.Navigation("Publishers");
                });

            modelBuilder.Entity("WebApi03.Models.Authors", b =>
                {
                    b.Navigation("Book_Authors");
                });

            modelBuilder.Entity("WebApi03.Models.Books", b =>
                {
                    b.Navigation("Book_Authors");
                });

            modelBuilder.Entity("WebApi03.Models.Publishers", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
